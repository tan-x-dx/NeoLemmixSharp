<Window xmlns="clr-namespace:MGUI.Core.UI.XAML;assembly=MGUI.Core"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:Local="clr-namespace:MGUI.Samples.Controls;assembly=MGUI.Samples"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        Left="440" Top="20" MinHeight="0" Width="600" Height="800" TitleText="ComboBox" Padding="10">
    <Window.Styles>
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="10" />
        </Style>
        <Style Name="Header1" TargetType="TextBlock">
            <Setter Property="IsBold" Value="True" />
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style TargetType="Separator">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Height" Value="2" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Opacity" Value="0.25" />
        </Style>
        <Style TargetType="Expander">
            <Setter Property="Padding" Value="4" />
            <Setter Property="Background" Value="White * 0.1" />
        </Style>
    </Window.Styles>

    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="rgb(64,64,64)" Padding="6,3">
        <StackPanel Orientation="Vertical" Spacing="10">
            <TextBlock StyleNames="Header1" Text="ComboBox:" HorizontalAlignment="Center" />
            <Separator/>
            <TextBlock>
                ComboBoxes display a set of mutually-exclusive choices inside of a popup list. The currently-chosen value is displayed directly inside the ComboBox.
            </TextBlock>

            <Border Background="White * 0.1" Padding="5,2" HorizontalAlignment="Left" BorderThickness="0">
                <HeaderedContentPresenter Dock="Left" Spacing="8" Header="This is a ComboBox with 5 choices:">
                    <ComboBox ItemType="{system:Type System:String}" Width="150" SelectedIndex="0">
                        <System:String>Option 1</System:String>
                        <System:String>Option 2</System:String>
                        <System:String>Option 3</System:String>
                        <System:String>Option 4</System:String>
                        <System:String>Option 5</System:String>
                    </ComboBox>
                </HeaderedContentPresenter>
            </Border>
            <Separator />

            <DockPanel>
                <TextBlock Dock="Top">
                    ComboBoxes require a Generic Type parameter which is used to restrict the [c=Turquoise][i]ComboBox.ItemsSource[/i][/c] collection.
                </TextBlock>
                <StackPanel Orientation="Vertical" Background="White * 0.1" Padding="4" Margin="0,4,0,0" Spacing="2">
                    <TextBlock>
                        To specify a Generic Type in XAML, use the [i]x:Type MarkupExtension[/i]. 
                        This XAML creates a [c=Turquoise][i]ComboBox&lt;[c=LightBlue][s=Blue]string[/s][/c]&gt;[/i][/c] and adds 3 [c=LightBlue][s=Blue]strings[/s][/c] to it.
                    </TextBlock>
                    <TextBox IsReadonly="True" Name="TextBox1" Background="rgb(12,16,82)" />
                </StackPanel>
            </DockPanel>
            <Separator/>

            <DockPanel>
                <TextBlock Dock="Top">
                    Set [c=Turquoise][i]ItemsSource[/i][/c], [c=Turquoise][i]DropdownItemTemplate[/i][/c], and [c=Turquoise][i]SelectedItemTemplate[/i][/c]
                    to control what items appear in the dropdown, and what content is displayed for each item.
                </TextBlock>
                <StackPanel Orientation="Vertical" Background="White * 0.1" Padding="4" Margin="0,4,0,0" Spacing="2">
                    <TextBlock Text="This ComboBox displays a list of colors. Each item's content is a colored rectangle followed by the color name:" />
                    <ComboBox Name="ComboBox1" HorizontalAlignment="Left" Width="180" ItemType="{x:Type Local:NamedColor}">
                        <!-- Note: If you don't specify a SelectedItemTemplate, it will default to the same content as DropdownItemTemplate -->
                        <ComboBox.DropdownItemTemplate>
                            <ContentTemplate>
                                <StackPanel Orientation="Horizontal" Spacing="5">
                                    <Rectangle Stroke="Black" StrokeThickness="1" Width="16" Height="16" VerticalAlignment="Center" 
                                               Fill="{MGBinding Path=FillBrush, Mode=OneTime}" />
                                    <TextBlock VerticalAlignment="Center" Text="{MGBinding Path=Name, Mode=OneTime}" />
                                </StackPanel>
                            </ContentTemplate>
                        </ComboBox.DropdownItemTemplate>
                    </ComboBox>
                    <TextBlock Text="This ComboBox uses a different template for the selected item:" />
                    <ComboBox Name="ComboBox2" HorizontalAlignment="Left" Width="180" ItemType="{x:Type Local:NamedColor}"
                              HorizontalContentAlignment="Stretch">
                        <ComboBox.DropdownItemTemplate>
                            <ContentTemplate>
                                <StackPanel Orientation="Horizontal" Spacing="5">
                                    <Rectangle Stroke="Black" StrokeThickness="1" Width="16" Height="16" VerticalAlignment="Center" 
                                               Fill="{MGBinding Path=FillBrush, Mode=OneTime}" />
                                    <TextBlock VerticalAlignment="Center" Text="{MGBinding Path=Name, Mode=OneTime}" />
                                </StackPanel>
                            </ContentTemplate>
                        </ComboBox.DropdownItemTemplate>
                        <ComboBox.SelectedItemTemplate>
                            <ContentTemplate>
                                <Border BorderBrush="Black * 0.3" BorderThickness="1" Margin="4,2" Padding="4,2" 
                                        VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                        Background="{MGBinding Path=FillBrush, Mode=OneTime}">
                                    <TextBlock Text="{MGBinding Path=Name, Mode=OneTime}" IsBold="True" IsShadowed="True" ShadowColor="Black" Foreground="rgb(240,232,240)" />
                                </Border>
                            </ContentTemplate>
                        </ComboBox.SelectedItemTemplate>
                    </ComboBox>
                    <TextBlock>
                        Each item inside the dropdown is automatically wrapped inside of a Button. 
                        You can customize the Button's appearance by making the outermost element of the
                        [c=Turquoise][i]DropdownItemTemplate[/i][/c] be of type [c=Turquoise][i]Button[/i][/c].
                    </TextBlock>
                    <ComboBox Name="ComboBox3" HorizontalAlignment="Left" Width="180" ItemType="{x:Type Local:NamedColor}">
                        <ComboBox.DropdownItemTemplate>
                            <ContentTemplate>
                                <!-- The items in this list use a Purple color for the selected item, a dark blue for unselected items, and a slightly lighter blue overlay for the hovered item -->
                                <Button Padding="6,3" Background="rgb(0,0,56)" BackgroundFocusedColor="rgb(0,0,40,96)" SelectedBackground="Purple * 0.7"
                                        BorderBrush="Gray" BorderThickness="1" Margin="0,4,0,0">
                                    <StackPanel Orientation="Horizontal" Spacing="5">
                                        <Rectangle Stroke="Black" StrokeThickness="1" Width="16" Height="16" VerticalAlignment="Center" 
                                               Fill="{MGBinding Path=FillBrush, Mode=OneTime}" />
                                        <TextBlock VerticalAlignment="Center" Text="{MGBinding Path=Name, Mode=OneTime}" />
                                    </StackPanel>
                                </Button>
                            </ContentTemplate>
                        </ComboBox.DropdownItemTemplate>
                        <ComboBox.SelectedItemTemplate>
                            <ContentTemplate>
                                <StackPanel Orientation="Horizontal" Spacing="5">
                                    <Rectangle Stroke="Black" StrokeThickness="1" Width="16" Height="16" VerticalAlignment="Center" 
                                               Fill="{MGBinding Path=FillBrush, Mode=OneTime}" />
                                    <TextBlock VerticalAlignment="Center" Text="{MGBinding Path=Name, Mode=OneTime}" />
                                </StackPanel>
                            </ContentTemplate>
                        </ComboBox.SelectedItemTemplate>
                    </ComboBox>
                </StackPanel>
            </DockPanel>
            <Separator/>

            <DockPanel>
                <TextBlock Dock="Top">
                    Set [c=Turquoise][i]MinDropdownWidth[/i][/c], [c=Turquoise][i]MaxDropdownWidth[/i][/c], 
                    [c=Turquoise][i]MinDropdownHeight[/i][/c], and [c=Turquoise][i]MaxDropdownHeight[/i][/c]
                    to control the size of the dropdown Window.
                </TextBlock>
                <StackPanel Orientation="Vertical" Background="White * 0.1" Padding="4" Margin="0,4,0,0" Spacing="2">
                    <TextBlock Text="This ComboBox has a very small maximum size for its dropdown window." />
                    <ComboBox ItemType="{x:Type System:String}" Width="180" DropdownArrowColor="Black" HorizontalAlignment="Left"
                              SelectedIndex="1" Background="Turquoise" MaxDropdownWidth="110" MaxDropdownHeight="64">
                        <ComboBox.SelectedItemTemplate>
                            <ContentTemplate>
                                <TextBlock Foreground="Black" FontSize="11" Text="{MGBinding Mode=OneTime}" />
                            </ContentTemplate>
                        </ComboBox.SelectedItemTemplate>
                        <System:String>Option 1</System:String>
                        <System:String>Option 2</System:String>
                        <System:String>Option 3</System:String>
                        <System:String>Option 4</System:String>
                    </ComboBox>
                    <TextBlock Text="This ComboBox has a very large minimum size for its dropdown window." />
                    <ComboBox ItemType="{x:Type System:String}" Width="180" DropdownArrowColor="Black" HorizontalAlignment="Left"
                              SelectedIndex="2" Background="Turquoise" MinDropdownWidth="240" MinDropdownHeight="200">
                        <ComboBox.SelectedItemTemplate>
                            <ContentTemplate>
                                <TextBlock Foreground="Black" FontSize="11" Text="{MGBinding Mode=OneTime}" />
                            </ContentTemplate>
                        </ComboBox.SelectedItemTemplate>
                        <System:String>Option 1</System:String>
                        <System:String>Option 2</System:String>
                        <System:String>Option 3</System:String>
                        <System:String>Option 4</System:String>
                    </ComboBox>
                </StackPanel>
            </DockPanel>
            <Separator/>

            <DockPanel>
                <TextBlock Dock="Top">
                    You can also customize [c=Turquoise][i]Dropdown[/i][/c], [c=Turquoise][i]DropdownScrollViewer[/i][/c], 
                    and [c=Turquoise][i]DropdownStackPanel[/i][/c] for more detailed control over the dropdown's appearance.
                </TextBlock>
                <StackPanel Orientation="Vertical" Background="White * 0.1" Padding="4" Margin="0,4,0,0" Spacing="2">
                    <TextBlock>
                        This ComboBox sets [c=Turquoise][i]Dropdown.Background[/i][/c] to a slightly transparent [c=Purple][s=Black]Purple[/s][/c] and gives it a 2px Black Border.
                        It also modifies the ScrollViewer's [c=Turquoise][i]Background[/i][/c] to [c=MediumPurple][i]MediumPurple[/i][/c] and increases the [c=Turquoise][i]Padding[/i][/c].
                    </TextBlock>
                    <ComboBox ItemType="{x:Type System:String}" Width="200" DropdownArrowColor="Black" HorizontalAlignment="Left"
                              SelectedIndex="2" Background="MediumPurple" MinDropdownHeight="160">
                        <ComboBox.Dropdown>
                            <Window BorderBrush="Black" BorderThickness="2" Background="Purple * 0.8" />
                        </ComboBox.Dropdown>
                        <ComboBox.DropdownScrollViewer>
                            <ScrollViewer Padding="5" Background="MediumPurple" VerticalAlignment="Top" />
                        </ComboBox.DropdownScrollViewer>
                        <System:String>Option 1</System:String>
                        <System:String>Option 2</System:String>
                        <System:String>Option 3</System:String>
                    </ComboBox>
                    <TextBlock Text="This ComboBox overrides [c=Turquoise][i]DropdownScrollViewer[/i][/c] properties to use shades of [c=Purple][s=Black]Purple[/s][/c] for the scrollbar." />
                    <ComboBox ItemType="{x:Type System:String}" Width="200" DropdownArrowColor="Black" HorizontalAlignment="Left"
                              SelectedIndex="1" Background="MediumPurple" MaxDropdownHeight="100">
                        <ComboBox.DropdownScrollViewer>
                            <ScrollViewer ScrollBarUnfocusedOuterBrush="rgb(33,27,42)" ScrollBarFocusedOuterBrush="rgb(41,34,51)"
                                          ScrollBarUnfocusedInnerBrush="MediumPurple" ScrollBarFocusedInnerBrush="rgb(157,122,229)"
                                          Background="rgb(66,48,110)" />
                        </ComboBox.DropdownScrollViewer>
                        <System:String>Option 1</System:String>
                        <System:String>Option 2</System:String>
                        <System:String>Option 3</System:String>
                        <System:String>Option 4</System:String>
                    </ComboBox>
                </StackPanel>
            </DockPanel>
            <Separator/>

            <DockPanel>
                <TextBlock Dock="Top">
                    Set [c=Turquoise][i]DropdownArrowColor[/i][/c] to customize the appearance of the arrow graphics on the right side of the ComboBox's Content.
                    To use your own custom graphics, you can set [c=Turquoise][i]DropdownArrowColor[/i][/c]=[c=LightBlue][s=Blue]Transparent[/s][/c] and modify 
                    [c=Turquoise][i]DropdownArrowElement[/i][/c] to draw your own content.
                </TextBlock>
                <StackPanel Orientation="Vertical" Background="White * 0.1" Padding="4" Margin="0,4,0,0" Spacing="2">
                    <TextBlock Text="This ComboBox has a Red dropdown arrow" />
                    <ComboBox ItemType="{x:Type System:String}" Width="180" DropdownArrowColor="Crimson" HorizontalAlignment="Left"
                              SelectedIndex="1" Background="Orange">
                        <System:String>Pizza</System:String>
                        <System:String>Spaghetti</System:String>
                        <System:String>Chicken</System:String>
                        <System:String>Burger</System:String>
                    </ComboBox>
                    <TextBlock Text="This ComboBox uses a custom icon where the dropdown arrow is usually drawn" />
                    <ComboBox ItemType="{x:Type System:String}" Width="180" DropdownArrowColor="Transparent" HorizontalAlignment="Left"
                              SelectedIndex="0" Background="Purple">
                        <ComboBox.DropdownArrow>
                            <ContentPresenter>
                                <Image Width="16" Height="16" SourceName="ArrowDownGreen" />
                            </ContentPresenter>
                        </ComboBox.DropdownArrow>
                        <System:String>Option 1</System:String>
                        <System:String>Option 2</System:String>
                        <System:String>Option 3</System:String>
                        <System:String>Option 4</System:String>
                        <System:String>Option 5</System:String>
                    </ComboBox>
                </StackPanel>
            </DockPanel>
            <Separator/>

            <DockPanel>
                <TextBlock Dock="Top">
                    Set [c=Turquoise][i]DropdownHeader[/i][/c] and/or [c=Turquoise][i]DropdownFooter[/i][/c] to add additional static content to the top or bottom of the dropdown window.
                </TextBlock>
                <StackPanel Orientation="Vertical" Background="White * 0.1" Padding="4" Margin="0,4,0,0" Spacing="2">
                    <TextBlock Text="This ComboBox has custom header and footer content inside the dropdown." />
                    <ComboBox ItemType="{x:Type System:String}" Width="180" HorizontalAlignment="Left"
                              SelectedIndex="0" Background="Navy" MaxDropdownWidth="180">
                        <ComboBox.DropdownHeader>
                            <Border Background="rgb(12,18,55)" Padding="8,3">
                                <TextBlock FontSize="9" TextAlignment="Center" Text="Select your favorite programming language:" />
                            </Border>
                        </ComboBox.DropdownHeader>
                        <ComboBox.DropdownFooter>
                            <Border Background="rgb(12,18,55)" Padding="8,3">
                                <TextBlock FontSize="8" TextAlignment="Center" Text="Don't pick JavaScript, it sucks" />
                            </Border>
                        </ComboBox.DropdownFooter>
                        <System:String>c#</System:String>
                        <System:String>c++</System:String>
                        <System:String>c</System:String>
                        <System:String>java</System:String>
                        <System:String>javascript</System:String>
                        <System:String>rust</System:String>
                        <System:String>python</System:String>
                        <System:String>other</System:String>
                    </ComboBox>
                </StackPanel>
            </DockPanel>

            <Spacer Height="70" />
        </StackPanel>
    </ScrollViewer>
</Window>
