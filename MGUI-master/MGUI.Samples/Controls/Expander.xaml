<Window xmlns="clr-namespace:MGUI.Core.UI.XAML;assembly=MGUI.Core"
        Left="440" Top="20" MinHeight="0" Width="500" Height="600" TitleText="Expander" Padding="10">
    <Window.Styles>
        <Style Name="Header1" TargetType="TextBlock">
            <Setter Property="IsBold" Value="True" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="IsShadowed" Value="True" />
            <Setter Property="ShadowColor" Value="Black" />
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="10" />
            <Setter Property="IsShadowed" Value="True" />
            <Setter Property="ShadowColor" Value="Black" />
        </Style>
        <Style TargetType="Separator">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Height" Value="2" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Opacity" Value="0.25" />
        </Style>
        <Style TargetType="Expander">
            <Setter Property="Padding" Value="4" />
            <Setter Property="Background" Value="White * 0.1" />
        </Style>
    </Window.Styles>

    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="rgb(64,64,64)" Padding="6,3">
        <StackPanel Orientation="Vertical" Spacing="10">
            <TextBlock StyleNames="Header1" Text="Expander:" HorizontalAlignment="Center" />
            <Separator/>
            <TextBlock Text="Expanders are specialized toggle buttons where the toggle controls the visibility of the child content." />

            <Expander IsExpanded="True" Name="Expander1">
                <Border BorderBrush="Red" BorderThickness="1" Background="Red * 0.2" HorizontalAlignment="Left" Padding="4">
                    <TextBlock TextAlignment="Center" Text="This is the content of an expander.\nClick the expander button to show/hide this content." />
                </Border>
            </Expander>
            <StackPanel Orientation="Horizontal">
                <TextBlock>The above expander's [c=Turquoise][i]IsExpanded[/i][/c] state is:</TextBlock>
                <TextBlock Foreground="LightBlue" IsShadowed="True" ShadowColor="Blue" Text="{MGBinding ElementName=Expander1, DataContextResolver=Self, Path=IsExpanded, Mode=OneWay}" />
            </StackPanel>
            <Separator/>

            <TextBlock>
                You can customize the expander's graphics by modifying [c=Turquoise][i]Expander.ExpanderToggleButton[/i][/c] 
                or any of its convenience properties such as 
                [c=Turquoise][i]ExpanderButtonSize[/i][/c], [c=Turquoise][i]ExpanderButtonBorderBrush[/i][/c], 
                [c=Turquoise][i]ExpanderButtonBorderThickness[/i][/c], [c=Turquoise][i]ExpanderButtonBackgroundBrush[/i][/c], 
                [c=Turquoise][i]ExpanderButtonSize[/i][/c].
            </TextBlock>
            <Expander IsExpanded="False" ExpanderButtonSize="32" Header="Big expander button" HeaderVerticalAlignment="Center" />
            <Expander IsExpanded="False" ExpanderButtonBorderBrush="Red" ExpanderButtonBorderThickness="2" Header="2px Red border" />
            <Expander IsExpanded="False" ExpanderButtonExpandedBackgroundBrush="Green|rgb(32,32,32)" ExpanderButtonCollapsedBackgroundBrush="Yellow|rgb(32,32,32)"
                      Header="Diagonal gradient background (Green to black when [c=Turquoise][i]IsExpanded[/i][/c]=[c=LightBlue][s=Blue]true[/s][/c], Yellow to black when [c=Turquoise][i]IsExpanded[/i][/c]=[c=LightBlue][s=Blue]false[/s][/c]" />
            <Separator/>
            <TextBlock>
                Set [c=Turquoise][i]ExpanderDropdownArrowColor[/i][/c] and [c=Turquoise][i]ExpanderDropdownArrowSize[/i][/c] to change the graphics of the arrow icon in the center of the toggle button.
            </TextBlock>
            <Expander ExpanderDropdownArrowSize="8" ExpanderDropdownArrowColor="Black" Header="Small black dropdown icon" />
            <Expander ExpanderDropdownArrowSize="12" ExpanderDropdownArrowColor="Brown" Header="Large brown dropdown icon" />

            <TextBlock>
                To use your own icon, set the color to Transparent and either subscribe to [c=Turquoise][i]ExpanderToggleButton.OnEndDraw[/i][/c] or micro-manage [c=Turquoise][i]ExpanderToggleButton.Content[/i][/c].
            </TextBlock>
            <Expander Name="CustomIconExpander" IsExpanded="False" ExpanderDropdownArrowColor="Transparent" Header="Expander with custom drawing inside its toggle button">
                <Expander.ExpanderToggleButton>
                    <ToggleButton Padding="0">
                        <ContextualContentPresenter Value="{MGBinding ElementName=CustomIconExpander, DataContextResolver=Self, Path=IsExpanded, Mode=OneWay}"
                                                    HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContextualContentPresenter.TrueContent>
                                <Image Width="16" Height="16" SourceName="ArrowUpGreen" />
                            </ContextualContentPresenter.TrueContent>
                            <ContextualContentPresenter.FalseContent>
                                <Image Width="16" Height="16" SourceName="ArrowDownGreen" />
                            </ContextualContentPresenter.FalseContent>
                        </ContextualContentPresenter>
                    </ToggleButton>
                </Expander.ExpanderToggleButton>
            </Expander>
            <Separator/>

            <TextBlock>
                Set [c=Turquoise][i]Expander.Header[/i][/c] to place any content you want to the right of the toggle button
            </TextBlock>
            <Expander IsExpanded="True">
                <Expander.Header>
                    <CheckBox IsChecked="True" Content="This CheckBox is the expander's Header" />
                </Expander.Header>
                <TextBlock Text="This TextBlock is the Content of the Expander" />
            </Expander>
        </StackPanel>
    </ScrollViewer>
</Window>
